#!/bin/sh

#$ -N chep09tmva

#$ -q small_serial.q
#$ -S /bin/bash
#$ -o $JOB_NAME.$JOB_ID.stdout
#$ -V
#$ -cwd
#$ -j y
#$ -l h_cpu=24:00:00

# email@address.invalid
# -m be
# -notify

#set -e

# Usage:
# qsub ametisti.sh.job results_dir [config-file]

ulimit -s 524288 # limit to stack to 512M

export LS_SUBCWD=$(pwd)
TEMPDIR=chep09tmva-${JOB_ID}

CONF=tmva-example.conf
RESULTS=""
if [ "x$#" = "x1" ]; then
    RESULTS=$1
elif [ "x$#" = "x2" ]; then
    RESULTS=$1
    CONF=$2
fi
STR=$LS_SUBCWD/$RESULTS
if [ ! -d $STR ];then
    mkdir $STR
elif [ "x$RESULTS" != "x" ]; then
    echo "Result directory $STR already exists!"
    echo "Exiting in order to avoid overwriting our precious results!"
    exit 0
fi
RESULTS=$STR
echo "Using configuration file $LS_SUBCWD/$CONF"
echo "Will store results in $RESULTS"
echo ""

# Create the computation work directory.
if [ ! -d /tmp/$USER ]; then
   mkdir /tmp/$USER
fi
cd    /tmp/$USER

if [ -d $TEMPDIR ]; then
    rm -fR $TEMPDIR
fi
mkdir $TEMPDIR
cd $TEMPDIR

WORKDIR=$(pwd)

function movetosubdir {
    if [ -e $WORKDIR/$1 ]; then
        mv $WORKDIR/$1 $LS_SUBCWD
    fi
}

function movetoresults {
    if [ -e $WORKDIR/$1 ]; then
        if [ -d $RESULTS/$1 ]; then
            rm -fR $RESULTS/$1;
        fi

        mv -f $WORKDIR/$1 $RESULTS
    fi
}

function copytoworkdir {
    if [ -f $LS_SUBCWD/$1 ]; then
        cp $LS_SUBCWD/$1 $WORKDIR
    fi
}

function replacedata {
    sed -e 's#../data/#$LS_SUBCWD/../data/#' $1 > $1.tmp
    mv $1.tmp $1
}

##########################################################


cd $WORKDIR

for I in $LS_SUBCWD/tmva*conf; do
    FILE=$(basename $I)
    copytoworkdir $FILE
    replacedata $FILE
done
copytoworkdir chep09tmva

echo " "
echo " "
echo " START EXECUTION OF JOB ..."
echo " "

##$LS_SUBCWD/../bin/trainTMVA | tee tmva.out
./chep09tmva $CONF | tee tmva.out

#cd $LS_SUBCWD
#if [ -f $LS_SUBCWD/tmva.out ]; then
#    mv $LS_SUBCWD/tmva.out $LS_SUBCWD/tmva.out_old
#fi
movetoresults tmva.out
movetoresults TMVA.root
movetoresults weights

echo " "
echo " -----------------"
echo "  JOB FINISHED."
echo " -----------------"
echo " "

if [ "x$JOB_NAME" != "x" ]; then
#    cp $LS_SUBCWD/$JOB_NAME.$JOB_ID.stdout $RESULTS/$JOB_NAME.$JOB_ID.stdout
    cp $LS_SUBCWD/$JOB_NAME.$JOB_ID.stdout $LS_SUBCWD/$JOB_NAME.$JOB_ID.stdout.stored
fi

echo -e "\a"

#cp $LS_SUBCWD/$JOB_NAME.$JOB_ID.stdout $LS_SUBCWD/$JOB_NAME.$JOB_ID.stored.stdout
#cp $LS_SUBCWD/$JOB_NAME.$JOB_ID.stderr $LS_SUBCWD/$JOB_NAME.$JOB_ID.stored.stderr
