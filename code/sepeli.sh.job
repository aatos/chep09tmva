#!/bin/sh

#$ -N chep09tmva

#$ -q lhc
#$ -S /bin/bash
#$ -o $JOB_NAME.$JOB_ID.stdout
#$ -V
#$ -cwd
#$ -j y
#$ -l h_cpu=24:00:00

# email@address.invalid
# -m be
# -notify

#set -e

# Usage:
# qsub sepeli.sh.job [results_dir] [config_file]

#ulimit -s 5120  # limit stack to 5M
#ulimit -s 10240 # limit stack to 10M
#ulimit -s 20480 # limit stack to 20M
ulimit -s 30720 # limit stack to 30M

export LS_SUBCWD=$(pwd)

CONF=tmva-common.conf
RESULTS=""
if [ "x$#" = "x1" ]; then
    CONF=$1
elif [ "x$#" = "x2" ]; then
    CONF=$1
    RESULTS=$2
fi
STR=$LS_SUBCWD/$RESULTS
if [ ! -d $STR ];then
    mkdir $STR
elif [ "x$RESULTS" != "x" ]; then
    echo "Result directory $STR already exists!"
    echo "Exiting in order to avoid overwriting our precious results!"
    exit 0
fi
RESULTS=$STR
echo "Using configuration file $LS_SUBCWD/$CONF"
echo "Will store results in $RESULTS"

# Create the computation work directory.
WORKDIR=$TMPDIR

echo "Working in $WORKDIR"
echo ""


function movetosubdir {
    if [ -e $WORKDIR/$1 ]; then
        mv $WORKDIR/$1 $LS_SUBCWD
    fi
}

function movetoresults {
    if [ -e $WORKDIR/$1 ]; then
        if [ -d $RESULTS/$1 ]; then
            rm -fR $RESULTS/$1;
        fi

        mv -f $WORKDIR/$1 $RESULTS
    fi
}

function copytoworkdir {
    if [ -f $LS_SUBCWD/$1 ]; then
        cp $LS_SUBCWD/$1 $WORKDIR
    fi
}

function replacedata {
    sed -e 's#^\s*\.\./data/#$LS_SUBCWD/../data/#' $1 > $1.tmp
    mv $1.tmp $1
}

##########################################################


cd $WORKDIR

for I in $LS_SUBCWD/*tmva*conf; do
    FILE=$(basename $I)
    copytoworkdir $FILE
    replacedata $FILE
done
copytoworkdir chep09tmva

echo " "
echo " "
echo " START EXECUTION OF JOB ..."
echo " "

./chep09tmva $CONF color=false | tee tmva.out
#./chep09tmva $CONF color=false > tmva.out 2>&1
#echo "Return value $?"

movetoresults tmva.out
movetoresults tmva.csvoutput.txt
movetoresults TMVA.root
movetoresults weights

echo " "
echo " -----------------"
echo "  JOB FINISHED."
echo " -----------------"
echo " "

if [ "x$JOB_NAME" != "x" ]; then
    cp $LS_SUBCWD/$JOB_NAME.$JOB_ID.stdout $LS_SUBCWD/$JOB_NAME.$JOB_ID.stdout.stored
fi

echo -e "\a"

